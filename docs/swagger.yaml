definitions:
  entity.InterfaceAPI:
    type: object
  entity.Person:
    properties:
      address:
        type: string
      age:
        type: integer
      ci:
        type: string
      country:
        type: string
      created:
        type: string
      gender:
        type: string
      id:
        type: string
      lastname:
        type: string
      name:
        type: string
      updated:
        type: string
    type: object
info:
  contact: {}
paths:
  /create_person:
    post:
      consumes:
      - application/json
      description: Create one person
      parameters:
      - description: Create Person
        in: body
        name: parameters
        required: true
        schema:
          $ref: '#/definitions/entity.Person'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.InterfaceAPI'
      summary: Create one person
      tags:
      - CRUD
  /delete_person/{id}:
    delete:
      consumes:
      - application/json
      description: Delete of one person
      parameters:
      - description: ID Person
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.InterfaceAPI'
      summary: Delete one person
      tags:
      - CRUD
  /get_person/{id}:
    get:
      consumes:
      - application/json
      description: Get details of one person
      parameters:
      - description: ID Person
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.InterfaceAPI'
      summary: Get details of one person
      tags:
      - CRUD
  /list_persons:
    get:
      consumes:
      - application/json
      description: Get details of all persons
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.InterfaceAPI'
            type: array
      summary: Get details of all persons
      tags:
      - CRUD
  /update_person/{id}:
    post:
      consumes:
      - application/json
      description: Update of one person
      parameters:
      - description: ID Person
        in: path
        name: id
        required: true
        type: string
      - description: Update Person
        in: body
        name: parameters
        required: true
        schema:
          $ref: '#/definitions/entity.Person'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.InterfaceAPI'
      summary: Update one person
      tags:
      - CRUD
swagger: "2.0"
